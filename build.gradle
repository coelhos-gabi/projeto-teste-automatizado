plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'br.com.letscode'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.seleniumhq.selenium:selenium-java:4.4.0'
	testImplementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.4.0'
	testImplementation 'org.seleniumhq.selenium:selenium-remote-driver:4.4.0'
	testImplementation 'org.seleniumhq.selenium:selenium-api:4.4.0'
	testImplementation 'org.mockito:mockito-core:4.8.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:4.8.0'
	testImplementation ('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport{                 //configuration for report formats.
	dependsOn test
	reports {
		xml.enabled true
		csv.enabled true
		html.enabled true
	}
	finalizedBy jacocoTestCoverageVerification  //run right after jacocoTestReport
}
jacocoTestCoverageVerification {   //Verifies the code coverage rule if enabled.
	violationRules {
		rule {
			enabled = true
		}
	}
}